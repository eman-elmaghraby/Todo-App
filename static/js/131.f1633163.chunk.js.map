{"version":3,"file":"static/js/131.f1633163.chunk.js","mappings":"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","sources":["hooks/CustomCheckbox.tsx","components/Filter.tsx","components/TodoList.tsx","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './CustomCheckbox.css';\r\n\r\n// Define the props for the CustomCheckbox component\r\ninterface CustomCheckboxProps {\r\n  checked: boolean;       \r\n  onChange: (checked: boolean) => void; \r\n}\r\n\r\nexport default function CustomCheckbox({ checked, onChange }: CustomCheckboxProps) {\r\n  // Local state to manage the checkbox's checked state\r\n  const [isChecked, setIsChecked] = useState(checked);\r\n\r\n  // Handle checkbox toggle\r\n  const handleToggle = () => {\r\n    const newCheckedState = !isChecked; \r\n    setIsChecked(newCheckedState);     \r\n    onChange(newCheckedState);           \r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`checkbox-container ${isChecked ? 'active' : ''}`} // Apply 'active' class if checked\r\n      onClick={handleToggle} \r\n    >\r\n      <div className=\"checkmark\"></div> {/* Visual representation of the checkmark */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { TodosContext } from '../context/TodoContext';\r\nimport './styles/Filter.css'; \r\n\r\nexport default function Filter() {\r\n  const { filter, setFilter } = useContext(TodosContext) || {\r\n    filter: 'all',\r\n    setFilter: () => {},\r\n  };\r\n\r\n  return (\r\n    <div className='filter-container mb-5 mt-4'>\r\n      <div className='d-flex align-items-center justify-content-between'>\r\n        <label htmlFor='filter' className='filter-label'>Filter Todos:</label>\r\n        <select\r\n          id='filter'\r\n          className='form-select filter-select'\r\n          value={filter}\r\n          onChange={(e) => setFilter(e.target.value)}\r\n        >\r\n          <option value='all'>All</option>\r\n          <option value='completed'>Completed</option>\r\n          <option value='incomplete'>Incomplete</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useCallback, useMemo } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport './styles/TodoList.css'; \r\nimport { TodosContext } from '../context/TodoContext';\r\nimport CustomCheckbox from '../hooks/CustomCheckbox';\r\nimport Filter from './Filter';\r\n\r\nconst TodoList = () => {\r\n  const { todos, toggleComplete, deleteTodo } = useContext(TodosContext) || {\r\n    todos: [],\r\n    toggleComplete: () => {},\r\n    deleteTodo: () => {},\r\n  };\r\n\r\n  // Memoize the filtered todos to avoid recalculating on every render\r\n  const memoizedTodos = useMemo(() => todos, [todos]);\r\n\r\n  // Memoize the toggleComplete function\r\n  const handleToggleComplete = useCallback((id: number) => {\r\n    toggleComplete(id);\r\n  }, [toggleComplete]);\r\n\r\n  // Memoize the deleteTodo function\r\n  const handleDeleteTodo = useCallback((id: number) => {\r\n    deleteTodo(id);\r\n  }, [deleteTodo]);\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='d-flex text-white flex-column justify-content-center align-items-center'>\r\n        <h1 className='mb-5'>Your Todo List</h1>\r\n      </div>\r\n      <Filter />\r\n      <Table striped bordered hover responsive className='todo-table'>\r\n        <thead>\r\n          <tr>\r\n            <th>Complete</th>\r\n            <th>Title</th>\r\n            <th>Description</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {memoizedTodos.map(todo => (\r\n            <tr key={todo.id} className={todo.completed ? 'table-success' : ''}>\r\n              <td className='d-flex justify-content-center p-3'>\r\n                <CustomCheckbox \r\n                  checked={todo.completed}\r\n                  onChange={() => handleToggleComplete(todo.id)} \r\n                />\r\n              </td>\r\n              <td>{todo.title}</td>\r\n              <td>{todo.description}</td>\r\n              <td className='d-flex justify-content-center'>\r\n                <button className=\"btn-53\" onClick={() => handleDeleteTodo(todo.id)}>\r\n                  <div className=\"original\">DELETE</div>\r\n                  <div className=\"letters\">\r\n                    <span>D</span>\r\n                    <span>E</span>\r\n                    <span>L</span>\r\n                    <span>E</span>\r\n                    <span>T</span>\r\n                    <span>E</span>\r\n                  </div>\r\n                </button>    \r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoList);\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["CustomCheckbox","_ref","checked","onChange","isChecked","setIsChecked","useState","_jsxs","className","onClick","handleToggle","newCheckedState","children","_jsx","Filter","filter","setFilter","useContext","TodosContext","htmlFor","id","value","e","target","TodoList","todos","toggleComplete","deleteTodo","memoizedTodos","useMemo","handleToggleComplete","useCallback","handleDeleteTodo","Table","striped","bordered","hover","responsive","map","todo","completed","title","description","React","ref","bsPrefix","borderless","size","variant","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","responsiveClass"],"sourceRoot":""}