{"version":3,"file":"static/js/373.bd96515f.chunk.js","mappings":"+LAMA,MAAMA,EAAmBC,EAAAA,YAAiB,CAAAC,EAMvCC,KAAQ,IANgC,SACzCC,EAAQ,UACRC,EAEAC,GAAIC,EAAY,SACbC,GACJN,EACC,MAAMO,GAAoBC,EAAAA,EAAAA,IAAmBN,EAAU,OACjDO,GAAcC,EAAAA,EAAAA,MACdC,GAAgBC,EAAAA,EAAAA,MAChBC,EAAa,GAAGN,SAChBO,EAAU,GAehB,OAdAL,EAAYM,SAAQC,IAClB,MAAMC,EAAYX,EAAMU,GAExB,IAAIE,SADGZ,EAAMU,GAEI,MAAbC,GAA0C,kBAAdA,IAE5BC,QACED,GAEJC,EAAOD,EAET,MAAME,EAAQH,IAAaL,EAAgB,IAAIK,IAAa,GAChD,MAARE,GAAcJ,EAAQM,KAAK,GAAGP,IAAaM,KAASD,IAAO,KAE7CG,EAAAA,EAAAA,KAAKhB,EAAW,CAClCJ,IAAKA,KACFK,EACHH,UAAWmB,IAAWnB,EAAWI,KAAsBO,IACvD,IAEJhB,EAAIyB,YAAc,MAClB,U,sCCbe,SAASC,IAEtB,MAAQC,KAAMC,EAAK,QAAEC,EAAO,MAAEC,GC1BjB,SAAqBC,GAClC,MAAOJ,EAAMK,IAAWC,EAAAA,EAAAA,UAAmB,OACpCJ,EAASK,IAAcD,EAAAA,EAAAA,WAAkB,IACzCH,EAAOK,IAAYF,EAAAA,EAAAA,UAAwB,MAoClD,OAlCAG,EAAAA,EAAAA,YAAU,KAEUC,WAChB,IAEE,MAAMC,QAAiBC,MAAMR,GAG7B,IAAKO,EAASE,GACZ,MAAM,IAAIC,MAAM,UAAUH,EAASI,cAIrC,MAAMC,QAAkBL,EAASM,OACjCZ,EAAQW,EAGV,CAAE,MAAOE,GAEHA,aAAeJ,MACjBN,EAASU,EAAIC,SAEbX,EAAS,4BAEb,CAAC,QAECD,GAAW,EACb,GAIFa,EAAW,GACV,CAAChB,IAEG,CAAEJ,OAAME,UAASC,QAC1B,CDd0CkB,CAAiB,+CAGnD,MAAEC,IAAUC,EAAAA,EAAAA,YAAWC,EAAAA,KAAiB,CAAEF,MAAO,IAGvD,GAAIpB,EAAS,OAAON,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,UAAS+C,SAAC,eAG7C,GAAItB,EAAO,OAAOuB,EAAAA,EAAAA,MAAA,OAAKhD,UAAU,QAAO+C,SAAA,CAAC,wBAAsBtB,KAG/D,MAAMwB,EAA+B,IAC/B1B,EAAQA,EAAM2B,KAAIC,IAAI,CAAOC,KAAM,OAAQ9B,KAAM6B,MAAoB,MACtEP,EAAMM,KAAIG,IAAI,CAAOD,KAAM,OAAQ9B,KAAM+B,OAG9C,OACEL,EAAAA,EAAAA,MAACM,EAAAA,EAAS,CAACtD,UAAU,sBAAqB+C,SAAA,EACxC7B,EAAAA,EAAAA,KAACvB,EAAG,CAACK,UAAU,0CAAyC+C,UACtD7B,EAAAA,EAAAA,KAACqC,EAAAA,EAAG,CAAAR,UACF7B,EAAAA,EAAAA,KAAA,MAAIlB,UAAU,QAAO+C,SAAC,+BAI1B7B,EAAAA,EAAAA,KAACvB,EAAG,CAAAoD,UACF7B,EAAAA,EAAAA,KAACqC,EAAAA,EAAG,CAAAR,UACFC,EAAAA,EAAAA,MAACQ,EAAAA,EAAK,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAC5D,UAAU,aAAY+C,SAAA,EAC7D7B,EAAAA,EAAAA,KAAA,SAAA6B,UACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACE7B,EAAAA,EAAAA,KAAA,MAAA6B,SAAI,UACJ7B,EAAAA,EAAAA,KAAA,MAAA6B,SAAI,WACJ7B,EAAAA,EAAAA,KAAA,MAAA6B,SAAI,cACJ7B,EAAAA,EAAAA,KAAA,MAAA6B,SAAI,gBACJ7B,EAAAA,EAAAA,KAAA,MAAA6B,SAAI,sBACJ7B,EAAAA,EAAAA,KAAA,MAAA6B,SAAI,yBAGR7B,EAAAA,EAAAA,KAAA,SAAA6B,SACGE,EAAaY,OAAS,EACrBZ,EAAaC,KAAI,CAACY,EAAMC,KACtB7C,EAAAA,EAAAA,KAAA,MAAgBlB,UAAyB,SAAd8D,EAAKV,KAAkB,WAAa,WAAWL,SACzD,SAAde,EAAKV,MACJJ,EAAAA,EAAAA,MAAAgB,EAAAA,SAAA,CAAAjB,SAAA,EACE7B,EAAAA,EAAAA,KAAA,MAAA6B,SAAKe,EAAKxC,KAAK2C,QACf/C,EAAAA,EAAAA,KAAA,MAAA6B,SAAKe,EAAKxC,KAAK4C,SACfhD,EAAAA,EAAAA,KAAA,MAAA6B,SAAKe,EAAKxC,KAAK6C,YACfjD,EAAAA,EAAAA,KAAA,MAAIkD,QAAS,EAAErB,SAAC,eAGlBC,EAAAA,EAAAA,MAAAgB,EAAAA,SAAA,CAAAjB,SAAA,EACE7B,EAAAA,EAAAA,KAAA,MAAIkD,QAAS,EAAErB,SAAC,YAChB7B,EAAAA,EAAAA,KAAA,MAAA6B,SAAKe,EAAKxC,KAAK+C,SACfnD,EAAAA,EAAAA,KAAA,MAAA6B,SAAKe,EAAKxC,KAAKgD,eACfpD,EAAAA,EAAAA,KAAA,MAAA6B,SAAKe,EAAKxC,KAAKiD,UAAY,MAAQ,WAbhCR,MAmBX7C,EAAAA,EAAAA,KAAA,MAAA6B,UACE7B,EAAAA,EAAAA,KAAA,MAAIkD,QAAS,EAAErB,SAAC,mCASlC,C,sFEpDA,MAAMQ,EAAmB3D,EAAAA,YAEzB,CAACO,EAAOL,KACN,OAAO,UACLE,KACGwE,IAEHvE,GAAIC,EAAY,MAAK,SACrBH,EAAQ,MACR0E,IAjDG,SAAe5E,GAKnB,IALoB,GACrBI,EAAE,SACFF,EAAQ,UACRC,KACGG,GACJN,EACCE,GAAWM,EAAAA,EAAAA,IAAmBN,EAAU,OACxC,MAAMO,GAAcC,EAAAA,EAAAA,MACdC,GAAgBC,EAAAA,EAAAA,MAChBgE,EAAQ,GACR9D,EAAU,GAqBhB,OApBAL,EAAYM,SAAQC,IAClB,MAAMC,EAAYX,EAAMU,GAExB,IAAI6D,EACAC,EACAC,SAHGzE,EAAMU,GAIY,kBAAdC,GAAuC,MAAbA,IAEjC4D,OACAC,SACAC,SACE9D,GAEJ4D,EAAO5D,EAET,MAAME,EAAQH,IAAaL,EAAgB,IAAIK,IAAa,GACxD6D,GAAMD,EAAMxD,MAAc,IAATyD,EAAgB,GAAG3E,IAAWiB,IAAU,GAAGjB,IAAWiB,KAAS0D,KACvE,MAATE,GAAejE,EAAQM,KAAK,QAAQD,KAAS4D,KACnC,MAAVD,GAAgBhE,EAAQM,KAAK,SAASD,KAAS2D,IAAS,IAEvD,CAAC,IACHxE,EACHH,UAAWmB,IAAWnB,KAAcyE,KAAU9D,IAC7C,CACDV,KACAF,WACA0E,SAEJ,CAWOI,CAAO1E,GACZ,OAAoBe,EAAAA,EAAAA,KAAKhB,EAAW,IAC/BsE,EACH1E,IAAKA,EACLE,UAAWmB,IAAWnB,GAAYyE,EAAMZ,QAAU9D,IAClD,IAEJwD,EAAInC,YAAc,MAClB,S,sFC1DA,MA+BA,EA/B2BxB,EAAAA,YAAiB,CAAAC,EAWzCC,KAAQ,IAXkC,SAC3CC,EAAQ,UACRC,EAAS,QACTyD,EAAO,SACPC,EAAQ,WACRoB,EAAU,MACVnB,EAAK,KACLoB,EAAI,QACJC,EAAO,WACPpB,KACGzD,GACJN,EACC,MAAMO,GAAoBC,EAAAA,EAAAA,IAAmBN,EAAU,SACjDY,EAAUQ,IAAWnB,EAAWI,EAAmB4E,GAAW,GAAG5E,KAAqB4E,IAAWD,GAAQ,GAAG3E,KAAqB2E,IAAQtB,GAAW,GAAGrD,KAAwC,kBAAZqD,EAAuB,WAAWA,IAAY,YAAaC,GAAY,GAAGtD,aAA8B0E,GAAc,GAAG1E,eAAgCuD,GAAS,GAAGvD,WACxV6E,GAAqB/D,EAAAA,EAAAA,KAAK,QAAS,IACpCf,EACHH,UAAWW,EACXb,IAAKA,IAEP,GAAI8D,EAAY,CACd,IAAIsB,EAAkB,GAAG9E,eAIzB,MAH0B,kBAAfwD,IACTsB,EAAkB,GAAGA,KAAmBtB,MAEtB1C,EAAAA,EAAAA,KAAK,MAAO,CAC9BlB,UAAWkF,EACXnC,SAAUkC,GAEd,CACA,OAAOA,CAAK,G","sources":["../node_modules/react-bootstrap/esm/Row.js","components/UserList.tsx","hooks/useFetch.tsx","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import React, { useContext } from 'react';\r\nimport { Table, Container, Row, Col } from 'react-bootstrap';\r\nimport useFetch from '../hooks/useFetch';\r\nimport { TodosContext } from '../context/TodoContext';\r\nimport './styles/UserList.css';\r\n\r\n// Define TypeScript interfaces for user and todo data\r\ninterface User {\r\n  id: number;\r\n  name: string;\r\n  username: string;\r\n  email: string;\r\n}\r\n\r\ninterface Todo {\r\n  id: number; \r\n  title: string;\r\n  description: string;\r\n  completed: boolean;\r\n}\r\n\r\n// Define a type for combined data\r\ntype CombinedData = \r\n  | { type: 'user'; data: User }\r\n  | { type: 'todo'; data: Todo };\r\n\r\nexport default function UserList() {\r\n  // Fetch user data from the API using custom hook\r\n  const { data: users, loading, error } = useFetch<User[]>('https://jsonplaceholder.typicode.com/users');\r\n  \r\n  // Access todos from the TodosContext\r\n  const { todos } = useContext(TodosContext) || { todos: [] as Todo[] }; \r\n\r\n  // Display loading state while fetching data\r\n  if (loading) return <div className=\"loading\">Loading...</div>;\r\n\r\n  // Display error state if fetching fails\r\n  if (error) return <div className=\"error\">Error loading users: {error}</div>;\r\n\r\n  // Combine user data and todo data\r\n  const combinedData: CombinedData[] = [\r\n    ...(users ? users.map(user => ({ type: 'user', data: user } as const)) : []),\r\n    ...todos.map(todo => ({ type: 'todo', data: todo } as const))\r\n  ];\r\n\r\n  return (\r\n    <Container className=\"user-list-container\">\r\n      <Row className=\"justify-content-center text-center mb-5\">\r\n        <Col>\r\n          <h1 className=\"title\">Users List with Todos</h1>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <Table striped bordered hover responsive className=\"user-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Username</th>\r\n                <th>Todo Title</th>\r\n                <th>Todo Description</th>\r\n                <th>Todo Completed</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {combinedData.length > 0 ? (\r\n                combinedData.map((item, index) => (\r\n                  <tr key={index} className={item.type === 'user' ? 'user-row' : 'todo-row'}>\r\n                    {item.type === 'user' ? (\r\n                      <>\r\n                        <td>{item.data.name}</td>\r\n                        <td>{item.data.email}</td>\r\n                        <td>{item.data.username}</td>\r\n                        <td colSpan={3}>—</td>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <td colSpan={3}>—</td>\r\n                        <td>{item.data.title}</td>\r\n                        <td>{item.data.description}</td>\r\n                        <td>{item.data.completed ? 'Yes' : 'No'}</td>\r\n                      </>\r\n                    )}\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan={6}>No data available</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function useFetch<T>(url: string) {\r\n  const [data, setData] = useState<T | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Function to fetch data\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch data from the URL\r\n        const response = await fetch(url);\r\n        \r\n        // Check if the response is not ok\r\n        if (!response.ok) {\r\n          throw new Error(`Error: ${response.statusText}`);\r\n        }\r\n        \r\n        // Parse JSON data\r\n        const result: T = await response.json();\r\n        setData(result);\r\n\r\n\r\n      } catch (err) {\r\n        // Handle errors\r\n        if (err instanceof Error) {\r\n          setError(err.message);\r\n        } else {\r\n          setError('An unknown error occurred');\r\n        }\r\n      } finally {\r\n        // Set loading to false whether there was an error or not\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n   \r\n    fetchData();\r\n  }, [url]); // Dependency array: refetch if URL changes\r\n\r\n  return { data, loading, error };\r\n}\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["Row","React","_ref","ref","bsPrefix","className","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","push","_jsx","classNames","displayName","UserList","data","users","loading","error","url","setData","useState","setLoading","setError","useEffect","async","response","fetch","ok","Error","statusText","result","json","err","message","fetchData","useFetch","todos","useContext","TodosContext","children","_jsxs","combinedData","map","user","type","todo","Container","Col","Table","striped","bordered","hover","responsive","length","item","index","_Fragment","name","email","username","colSpan","title","description","completed","colProps","spans","span","offset","order","useCol","borderless","size","variant","table","responsiveClass"],"sourceRoot":""}