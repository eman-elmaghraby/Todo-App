{"version":3,"file":"static/js/59.10363247.chunk.js","mappings":"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","sources":["components/TodoForm.tsx","hooks/CustomCheckbox.tsx","components/Filter.tsx","components/TodoList.tsx","components/TodosPage.tsx","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import { useFormik } from 'formik';\r\nimport React, { useContext } from 'react';\r\nimport * as Yup from 'yup';\r\nimport './styles/TodoForm.css';\r\nimport { FormGroup } from 'react-bootstrap';\r\nimport { TodosContext } from '../context/TodoContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// Define validation schema using Yup\r\nconst validationSchema = Yup.object().shape({\r\n  title: Yup.string().required('Please provide a title for your todo.'),\r\n  description: Yup.string().required('A description is required for the todo. Please enter one.'),\r\n});\r\n\r\nexport default function TodoForm() {\r\n  // Access TodosContext to get the addTodo function\r\n  const todosContext = useContext(TodosContext);\r\n  const navigate = useNavigate();\r\n\r\n  // Ensure the component is used within a TodosProvider\r\n  if (!todosContext) {\r\n    throw new Error('TodoForm must be used within a TodosProvider');\r\n  }\r\n\r\n  const { addTodo } = todosContext;\r\n\r\n  // Initialize Formik with initial values, validation schema, and submit handler\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: '',\r\n      description: '',\r\n    },\r\n    validationSchema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      // Create a new todo item with current date as ID\r\n      const newTodo = {\r\n        id: Date.now(),\r\n        title: values.title,\r\n        description: values.description,\r\n        completed: false,\r\n      };\r\n      // Add the new todo to context\r\n      addTodo(newTodo);\r\n      // Reset the form fields\r\n      resetForm();\r\n      // Navigate to the todos list page\r\n      navigate('/todos-list'); \r\n    },\r\n  });\r\n\r\n  return (\r\n    // Container for the form with styling\r\n    <div className='d-flex text-white flex-column justify-content-between align-items-center'>\r\n      <form onSubmit={formik.handleSubmit} className='d-flex flex-column align-items-stretch'>\r\n        {/* Title input field */}\r\n        <FormGroup>\r\n          <input\r\n            value={formik.values.title}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            placeholder=\"Title\"\r\n            className=\"input mb-3\"\r\n            name=\"title\"\r\n            type=\"text\"\r\n          />\r\n          {/* Display validation error for title */}\r\n          {formik.touched.title && formik.errors.title ? (\r\n            <div className=\"text-danger mb-3\">{formik.errors.title}</div>\r\n          ) : null}\r\n        </FormGroup>\r\n\r\n        {/* Description input field */}\r\n        <FormGroup>\r\n          <input\r\n            value={formik.values.description}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            placeholder=\"Description\"\r\n            className=\"input mb-3\"\r\n            name=\"description\"\r\n            type=\"text\"\r\n          />\r\n          {/* Display validation error for description */}\r\n          {formik.touched.description && formik.errors.description ? (\r\n            <div className=\"text-danger mb-3\">{formik.errors.description}</div>\r\n          ) : null}\r\n        </FormGroup>\r\n\r\n        {/* Submit button */}\r\n        <button type=\"submit\" disabled={!formik.isValid} className=\"btn\">\r\n          Add Todo\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport './CustomCheckbox.css';\r\n\r\n// Define the props for the CustomCheckbox component\r\ninterface CustomCheckboxProps {\r\n  checked: boolean;       \r\n  onChange: (checked: boolean) => void; \r\n}\r\n\r\nexport default function CustomCheckbox({ checked, onChange }: CustomCheckboxProps) {\r\n  // Local state to manage the checkbox's checked state\r\n  const [isChecked, setIsChecked] = useState(checked);\r\n\r\n  // Handle checkbox toggle\r\n  const handleToggle = () => {\r\n    const newCheckedState = !isChecked; \r\n    setIsChecked(newCheckedState);     \r\n    onChange(newCheckedState);           \r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`checkbox-container ${isChecked ? 'active' : ''}`} // Apply 'active' class if checked\r\n      onClick={handleToggle} \r\n    >\r\n      <div className=\"checkmark\"></div> {/* Visual representation of the checkmark */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { TodosContext } from '../context/TodoContext';\r\nimport './styles/Filter.css'; \r\n\r\nexport default function Filter() {\r\n  const { filter, setFilter } = useContext(TodosContext) || {\r\n    filter: 'all',\r\n    setFilter: () => {},\r\n  };\r\n\r\n  return (\r\n    <div className='filter-container mb-5 mt-4'>\r\n      <div className='d-flex align-items-center justify-content-between'>\r\n        <label htmlFor='filter' className='filter-label'>Filter Todos:</label>\r\n        <select\r\n          id='filter'\r\n          className='form-select filter-select'\r\n          value={filter}\r\n          onChange={(e) => setFilter(e.target.value)}\r\n        >\r\n          <option value='all'>All</option>\r\n          <option value='completed'>Completed</option>\r\n          <option value='incomplete'>Incomplete</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useCallback, useMemo } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport './styles/TodoList.css'; \r\nimport { TodosContext } from '../context/TodoContext';\r\nimport CustomCheckbox from '../hooks/CustomCheckbox';\r\nimport Filter from './Filter';\r\n\r\nconst TodoList = () => {\r\n  const { todos, toggleComplete, deleteTodo } = useContext(TodosContext) || {\r\n    todos: [],\r\n    toggleComplete: () => {},\r\n    deleteTodo: () => {},\r\n  };\r\n\r\n  // Memoize the filtered todos to avoid recalculating on every render\r\n  const memoizedTodos = useMemo(() => todos, [todos]);\r\n\r\n  // Memoize the toggleComplete function\r\n  const handleToggleComplete = useCallback((id: number) => {\r\n    toggleComplete(id);\r\n  }, [toggleComplete]);\r\n\r\n  // Memoize the deleteTodo function\r\n  const handleDeleteTodo = useCallback((id: number) => {\r\n    deleteTodo(id);\r\n  }, [deleteTodo]);\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='d-flex text-white flex-column justify-content-center align-items-center'>\r\n        <h1 className='mb-5'>Your Todo List</h1>\r\n      </div>\r\n      <Filter />\r\n      <Table striped bordered hover responsive className='todo-table'>\r\n        <thead>\r\n          <tr>\r\n            <th>Complete</th>\r\n            <th>Title</th>\r\n            <th>Description</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {memoizedTodos.map(todo => (\r\n            <tr key={todo.id} className={todo.completed ? 'table-success' : ''}>\r\n              <td className='d-flex justify-content-center p-3'>\r\n                <CustomCheckbox \r\n                  checked={todo.completed}\r\n                  onChange={() => handleToggleComplete(todo.id)} \r\n                />\r\n              </td>\r\n              <td>{todo.title}</td>\r\n              <td>{todo.description}</td>\r\n              <td className='d-flex justify-content-center'>\r\n                <button className=\"btn-53\" onClick={() => handleDeleteTodo(todo.id)}>\r\n                  <div className=\"original\">DELETE</div>\r\n                  <div className=\"letters\">\r\n                    <span>D</span>\r\n                    <span>E</span>\r\n                    <span>L</span>\r\n                    <span>E</span>\r\n                    <span>T</span>\r\n                    <span>E</span>\r\n                  </div>\r\n                </button>    \r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoList);\r\n","import React, { useState } from 'react';\r\nimport TodoForm from '../components/TodoForm';\r\nimport TodoList from '../components/TodoList';\r\n\r\n\r\nexport default function TodoPage() {\r\n\r\n  return (\r\n    <div className='d-flex text-white flex-column justify-content-between align-items-center'>\r\n      <h1 className='mb-5'>Todo Page</h1>\r\n      <TodoForm/>\r\n      <TodoList   />\r\n    </div>\r\n  );\r\n}\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["validationSchema","Yup","shape","title","required","description","TodoForm","todosContext","useContext","TodosContext","navigate","useNavigate","Error","addTodo","formik","useFormik","initialValues","onSubmit","values","_ref","resetForm","newTodo","id","Date","now","completed","_jsx","className","children","_jsxs","handleSubmit","FormGroup","value","onChange","handleChange","onBlur","handleBlur","placeholder","name","type","touched","errors","disabled","isValid","CustomCheckbox","checked","isChecked","setIsChecked","useState","onClick","handleToggle","newCheckedState","Filter","filter","setFilter","htmlFor","e","target","TodoList","todos","toggleComplete","deleteTodo","memoizedTodos","useMemo","handleToggleComplete","useCallback","handleDeleteTodo","Table","striped","bordered","hover","responsive","map","todo","React","TodoPage","ref","bsPrefix","borderless","size","variant","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","responsiveClass"],"sourceRoot":""}