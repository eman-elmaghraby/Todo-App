{"version":3,"file":"static/js/776.f68a95f3.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/Button.js","components/RegistrationForm.tsx","../node_modules/react-bootstrap/esm/Col.js","../node_modules/warning/warning.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormFloating = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFormFloating.displayName = 'FormFloating';\nexport default FormFloating;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","import React from 'react';\r\nimport { useFormik, FormikProvider, FormikProps } from 'formik';\r\nimport { Button, FormControl, FormGroup, FormLabel, Form } from 'react-bootstrap';\r\nimport * as Yup from 'yup';\r\n\r\nexport default function RegistrationForm() {\r\n  // Validation schema using Yup\r\n  const validationSchema = Yup.object().shape({\r\n    fullName: Yup.string().required('Full Name is required'),\r\n    email: Yup.string().email('Invalid email').required('Email is required'),\r\n    password: Yup.string().required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref('password')], 'Passwords must match')\r\n      .required('Confirm Password is required'),\r\n    agree: Yup.bool().oneOf([true], 'You must agree to the terms'),\r\n  });\r\n\r\n  // Initialize Formik with initial values, validation schema, and submit handler\r\n  const formik: FormikProps<any> = useFormik({\r\n    initialValues: {\r\n      fullName: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      agree: false,\r\n    },\r\n    validationSchema,\r\n    onSubmit: (values) => {\r\n      // Handle form submission, e.g., send values to an API\r\n      console.log(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    // Provide Formik context to the form\r\n    <FormikProvider value={formik}>\r\n      <Form onSubmit={formik.handleSubmit}>\r\n        {/* Full Name Field */}\r\n        <FormGroup className='mb-4'>\r\n          <FormLabel className='text-white fw-bolder'>Full Name</FormLabel>\r\n          <FormControl\r\n            isInvalid={!!formik.errors.fullName && formik.touched.fullName === true}\r\n            {...formik.getFieldProps('fullName')}\r\n          />\r\n          {/* Display validation error for Full Name */}\r\n          {formik.errors.fullName && formik.touched.fullName === true && (\r\n            <div className=\"text-danger\">{formik.errors.fullName as string}</div>\r\n          )}\r\n        </FormGroup>\r\n\r\n        {/* Email Field */}\r\n        <FormGroup className='mb-4'>\r\n          <FormLabel className='text-white fw-bolder'>Email</FormLabel>\r\n          <FormControl\r\n            type=\"email\"\r\n            isInvalid={!!formik.errors.email && formik.touched.email === true}\r\n            {...formik.getFieldProps('email')}\r\n          />\r\n          {/* Display validation error for Email */}\r\n          {formik.errors.email && formik.touched.email === true && (\r\n            <div className=\"text-danger\">{formik.errors.email as string}</div>\r\n          )}\r\n        </FormGroup>\r\n\r\n        {/* Password Field */}\r\n        <FormGroup className='mb-4'>\r\n          <FormLabel className='text-white fw-bolder'>Password</FormLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            isInvalid={!!formik.errors.password && formik.touched.password === true}\r\n            {...formik.getFieldProps('password')}\r\n          />\r\n          {/* Display validation error for Password */}\r\n          {formik.errors.password && formik.touched.password === true && (\r\n            <div className=\"text-danger\">{formik.errors.password as string}</div>\r\n          )}\r\n        </FormGroup>\r\n\r\n        {/* Confirm Password Field */}\r\n        <FormGroup className='mb-4'>\r\n          <FormLabel className='text-white fw-bolder'>Confirm Password</FormLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            isInvalid={!!formik.errors.confirmPassword && formik.touched.confirmPassword === true}\r\n            {...formik.getFieldProps('confirmPassword')}\r\n          />\r\n          {/* Display validation error for Confirm Password */}\r\n          {formik.errors.confirmPassword && formik.touched.confirmPassword === true && (\r\n            <div className=\"text-danger\">{formik.errors.confirmPassword as string}</div>\r\n          )}\r\n        </FormGroup>\r\n\r\n        {/* Agree to Terms Checkbox */}\r\n        <FormGroup className='mb-4'>\r\n          <Form.Check\r\n          className=' text-white'\r\n            type=\"checkbox\"\r\n            id=\"agree\"\r\n            label=\"I agree to the Terms\"\r\n            {...formik.getFieldProps('agree')}\r\n            isInvalid={!!formik.errors.agree && formik.touched.agree === true}\r\n          />\r\n          {/* Display validation error for Terms Agreement */}\r\n          {formik.errors.agree && formik.touched.agree === true && (\r\n            <div className=\"text-danger\">{formik.errors.agree as string}</div>\r\n          )}\r\n        </FormGroup>\r\n\r\n        {/* Submit Button */}\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"names":["propTypes","type","PropTypes","tooltip","as","Feedback","React","_ref","ref","Component","className","props","_jsx","classNames","displayName","FormCheckInput","id","bsPrefix","isValid","isInvalid","controlId","useContext","FormContext","useBootstrapPrefix","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","reverse","disabled","feedbackTooltip","feedback","feedbackType","style","title","label","children","innerFormContext","useMemo","hasLabel","toArray","some","child","hasChildOfType","input","Provider","value","_jsxs","_Fragment","Object","assign","Input","Label","FormControl","size","htmlSize","plaintext","readOnly","FormFloating","FormLabel","column","visuallyHidden","columnClass","classes","Col","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","FormGroup","validated","Form","Group","Control","Floating","Check","Text","Range","Select","Button","variant","active","prefix","buttonProps","tagName","useButtonProps","href","RegistrationForm","validationSchema","Yup","shape","fullName","required","email","password","confirmPassword","oneOf","agree","formik","useFormik","initialValues","onSubmit","values","console","log","FormikProvider","handleSubmit","errors","touched","getFieldProps","colProps","spans","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","forEach","brkPoint","propValue","span","offset","order","infix","push","useCol","length","warning","module","exports"],"sourceRoot":""}